@import "mixin";
@import "keyframes";

.container {
  position: relative;
  padding: 73px 24px 0 24px;
  @include respond-to('small') {
    padding: 20px 24px 0 24px;
  }
  &.visible {
    .title {
      animation: FadeInUp 800ms ease-out forwards;
    }
    .description {
      animation: FadeInUp 800ms 100ms ease-out forwards;
    }
    .speakerContainer {
      animation: FadeInUp 800ms 200ms ease-out forwards;
    }
    @include respond-to('small') {
      .title {
        animation: FadeInUpMobile 500ms ease-out forwards;
      }
      .description {
        animation: FadeInUpMobile 500ms 100ms ease-out forwards;
      }
      .speakerContainer {
        animation: FadeInUpMobile 500ms 200ms ease-out forwards;
      }
    }
  }
}

.title {
  font-size: 56px;
  font-weight: 700;
  text-align: center;
  color: white;
  opacity: 0;
  transform: translateY(100px);
  @include respond-to('small') {
    font-size: 30px;
    transform: translateY(40px);
  }
}

.description {
  font-size: 18px;
  line-height: 28px;
  margin-top: 32px;
  text-align: center;
  color: #D7DEEB;
  opacity: 0;
  transform: translateY(100px);
  @include respond-to('small') {
    font-size: 16px;
    line-height: 25px;
    transform: translateY(40px);
  }
}

.speakerContainer {
  position: relative;
  height: 452px;
  margin-top: 80px;
  display: flex;
  flex-direction: column;
  gap: 30px;
  opacity: 0;
  transform: translateY(100px);
  @include respond-to('large') {
    height: 326px;
  }
  @include respond-to('small') {
    height: auto;
    margin-top: 40px;
    gap: 20px;
    transform: translateY(40px);
  }
}

.speakerRow {
  position: absolute;
  display: flex;
  gap: 20px;
  width: 2380px;
  will-change: transform;
  &:first-child {
    top: 0;
    right: 50%;
  }
  &:last-child {
    bottom: 0;
    left: 50%;
  }
  @include respond-to('large') {
    width: 1660px;
  }
  @include respond-to('small') {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    width: auto;
    &:first-child {
      transform: translate3d(0, 0, 0) !important;
      right: 0;
    }
    &:last-child {
      transform: translate3d(0, 0, 0) !important;
      left: 0;
    }
  }
}
